/******/ (() => { // webpackBootstrap
/*!******************!*
  !*** ./popup.js ***!
  \******************/
const search = document.getElementById('search');
const versatile = document.getElementById('versatile');
const card__text = document.getElementById('card__text');
const DEBOUNCE_DURATION = 500;
addEventListener('DOMContentLoaded', () => {
  chrome.storage.sync.get('word', function (data) {
    if (!data.word) {
      return;
    }

    search.value = data.word;
    searchWord(data.word);
  });
});

function debounce(callback, wait, context = this) {
  let timeout = null;
  let callbackArgs = null;

  const later = () => callback.apply(context, callbackArgs);

  return function () {
    callbackArgs = arguments;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
}

search.addEventListener('input', e => {
  versatile.innerHTML = '검색중입니다.';
  const debouncingSearchWord = debounce(word => {
    searchWord(word);
  }, DEBOUNCE_DURATION);
  debouncingSearchWord(e.target.value);
});
versatile.addEventListener('click', e => {
  search.value = e.target.innerText;
  searchWord(search.value);
});
const NO_CONTENT_ELEMENT = `
                   <div>
                    <span>검색 결과가 없습니다.</span>
                    <a target="_blank" href="https://meotitda.github.io/DICTIONARY-EDITOR/">→ 새로운 단어 추가하기</a>
                    <a target="_blank" href="https://github.com/meotitda/DICTIONARY">→ 단어 추가 메뉴얼</a>
                   </div>
                   `;

function searchWord(word) {
  chrome.runtime.sendMessage({
    handler: 'translate',
    word
  }, function (response) {
    switch (response.type) {
      case 'recommand':
        versatile.innerHTML = "추천 검색어<br>";
        response.recommands.map(recommand => {
          const element = document.createElement('span');
          element.innerText = recommand.title + " ";
          versatile.appendChild(element);
          card__text.innerHTML = NO_CONTENT_ELEMENT;
          return;
        });
        break;

      case 'find':
        versatile.innerHTML = '';
        card__text.innerHTML = response.word.content.replaceAll('<br />', '<br /><br />');
        break;

      default:
        versatile.innerHTML = '';
        card__text.innerHTML = NO_CONTENT_ELEMENT;
    }

    return true;
  });
  versatile.innerHTML = '';
  card__text.innerHTML = NO_CONTENT_ELEMENT;
}
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsb19leHRlbnNpb25zLy4vcG9wdXAuanMiXSwibmFtZXMiOlsic2VhcmNoIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInZlcnNhdGlsZSIsImNhcmRfX3RleHQiLCJERUJPVU5DRV9EVVJBVElPTiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjaHJvbWUiLCJzdG9yYWdlIiwic3luYyIsImdldCIsImRhdGEiLCJ3b3JkIiwidmFsdWUiLCJzZWFyY2hXb3JkIiwiZGVib3VuY2UiLCJjYWxsYmFjayIsIndhaXQiLCJjb250ZXh0IiwidGltZW91dCIsImNhbGxiYWNrQXJncyIsImxhdGVyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZSIsImlubmVySFRNTCIsImRlYm91bmNpbmdTZWFyY2hXb3JkIiwidGFyZ2V0IiwiaW5uZXJUZXh0IiwiTk9fQ09OVEVOVF9FTEVNRU5UIiwicnVudGltZSIsInNlbmRNZXNzYWdlIiwiaGFuZGxlciIsInJlc3BvbnNlIiwidHlwZSIsInJlY29tbWFuZHMiLCJtYXAiLCJyZWNvbW1hbmQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInRpdGxlIiwiYXBwZW5kQ2hpbGQiLCJjb250ZW50IiwicmVwbGFjZUFsbCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxjQUFULENBQXdCLFFBQXhCLENBQWY7QUFDQSxNQUFNQyxTQUFTLEdBQUdGLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixXQUF4QixDQUFsQjtBQUNBLE1BQU1FLFVBQVUsR0FBR0gsUUFBUSxDQUFDQyxjQUFULENBQXdCLFlBQXhCLENBQW5CO0FBQ0EsTUFBTUcsaUJBQWlCLEdBQUcsR0FBMUI7QUFFQUMsZ0JBQWdCLENBQUMsa0JBQUQsRUFBcUIsTUFBSztBQUNsQ0MsUUFBTSxDQUFDQyxPQUFQLENBQWVDLElBQWYsQ0FBb0JDLEdBQXBCLENBQXdCLE1BQXhCLEVBQWdDLFVBQVNDLElBQVQsRUFBZTtBQUMzQyxRQUFHLENBQUNBLElBQUksQ0FBQ0MsSUFBVCxFQUFlO0FBQ1g7QUFDSDs7QUFDRFosVUFBTSxDQUFDYSxLQUFQLEdBQWVGLElBQUksQ0FBQ0MsSUFBcEI7QUFDQUUsY0FBVSxDQUFDSCxJQUFJLENBQUNDLElBQU4sQ0FBVjtBQUNILEdBTkQ7QUFPUCxDQVJlLENBQWhCOztBQVlBLFNBQVNHLFFBQVQsQ0FBa0JDLFFBQWxCLEVBQTRCQyxJQUE1QixFQUFrQ0MsT0FBTyxHQUFHLElBQTVDLEVBQWtEO0FBRTlDLE1BQUlDLE9BQU8sR0FBRyxJQUFkO0FBQ0EsTUFBSUMsWUFBWSxHQUFHLElBQW5COztBQUVBLFFBQU1DLEtBQUssR0FBRyxNQUFNTCxRQUFRLENBQUNNLEtBQVQsQ0FBZUosT0FBZixFQUF3QkUsWUFBeEIsQ0FBcEI7O0FBRUEsU0FBTyxZQUFXO0FBQ2RBLGdCQUFZLEdBQUdHLFNBQWY7QUFDQUMsZ0JBQVksQ0FBQ0wsT0FBRCxDQUFaO0FBQ0FBLFdBQU8sR0FBR00sVUFBVSxDQUFDSixLQUFELEVBQVFKLElBQVIsQ0FBcEI7QUFDSCxHQUpEO0FBS0g7O0FBRURqQixNQUFNLENBQUNNLGdCQUFQLENBQXdCLE9BQXhCLEVBQWtDb0IsQ0FBRCxJQUFNO0FBRW5DdkIsV0FBUyxDQUFDd0IsU0FBVixHQUFvQixTQUFwQjtBQUVBLFFBQU1DLG9CQUFvQixHQUFHYixRQUFRLENBQUVILElBQUQsSUFBVTtBQUM1Q0UsY0FBVSxDQUFDRixJQUFELENBQVY7QUFDRCxHQUZrQyxFQUVoQ1AsaUJBRmdDLENBQXJDO0FBSUV1QixzQkFBb0IsQ0FBQ0YsQ0FBQyxDQUFDRyxNQUFGLENBQVNoQixLQUFWLENBQXBCO0FBQ0wsQ0FURDtBQVdBVixTQUFTLENBQUNHLGdCQUFWLENBQTJCLE9BQTNCLEVBQXFDb0IsQ0FBRCxJQUFNO0FBQ3RDMUIsUUFBTSxDQUFDYSxLQUFQLEdBQWVhLENBQUMsQ0FBQ0csTUFBRixDQUFTQyxTQUF4QjtBQUNBaEIsWUFBVSxDQUFDZCxNQUFNLENBQUNhLEtBQVIsQ0FBVjtBQUNILENBSEQ7QUFNQSxNQUFNa0Isa0JBQWtCLEdBQUk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQU5BOztBQU9BLFNBQVNqQixVQUFULENBQW9CRixJQUFwQixFQUEwQjtBQUN0QkwsUUFBTSxDQUFDeUIsT0FBUCxDQUFlQyxXQUFmLENBQ0k7QUFBQ0MsV0FBTyxFQUFFLFdBQVY7QUFBdUJ0QjtBQUF2QixHQURKLEVBQ2tDLFVBQVN1QixRQUFULEVBQW1CO0FBQ2pELFlBQU9BLFFBQVEsQ0FBQ0MsSUFBaEI7QUFDSSxXQUFLLFdBQUw7QUFDSWpDLGlCQUFTLENBQUN3QixTQUFWLEdBQW9CLFlBQXBCO0FBQ0RRLGdCQUFRLENBQUNFLFVBQVQsQ0FBb0JDLEdBQXBCLENBQXlCQyxTQUFELElBQWM7QUFDbEMsZ0JBQU1DLE9BQU8sR0FBR3ZDLFFBQVEsQ0FBQ3dDLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBaEI7QUFDQUQsaUJBQU8sQ0FBQ1YsU0FBUixHQUFvQlMsU0FBUyxDQUFDRyxLQUFWLEdBQWtCLEdBQXRDO0FBQ0F2QyxtQkFBUyxDQUFDd0MsV0FBVixDQUFzQkgsT0FBdEI7QUFDQXBDLG9CQUFVLENBQUN1QixTQUFYLEdBQXVCSSxrQkFBdkI7QUFDQTtBQUNGLFNBTkY7QUFPQzs7QUFDSixXQUFLLE1BQUw7QUFDSTVCLGlCQUFTLENBQUN3QixTQUFWLEdBQW9CLEVBQXBCO0FBQ0F2QixrQkFBVSxDQUFDdUIsU0FBWCxHQUF1QlEsUUFBUSxDQUFDdkIsSUFBVCxDQUFjZ0MsT0FBZCxDQUFzQkMsVUFBdEIsQ0FBaUMsUUFBakMsRUFBMkMsY0FBM0MsQ0FBdkI7QUFDQTs7QUFDSjtBQUNJMUMsaUJBQVMsQ0FBQ3dCLFNBQVYsR0FBb0IsRUFBcEI7QUFDQXZCLGtCQUFVLENBQUN1QixTQUFYLEdBQXVCSSxrQkFBdkI7QUFqQlI7O0FBbUJBLFdBQU8sSUFBUDtBQUVILEdBdkJEO0FBd0JBNUIsV0FBUyxDQUFDd0IsU0FBVixHQUFvQixFQUFwQjtBQUNBdkIsWUFBVSxDQUFDdUIsU0FBWCxHQUF1Qkksa0JBQXZCO0FBQ0gsQyIsImZpbGUiOiJwb3B1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZWFyY2gnKVxuY29uc3QgdmVyc2F0aWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZlcnNhdGlsZScpXG5jb25zdCBjYXJkX190ZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhcmRfX3RleHQnKVxuY29uc3QgREVCT1VOQ0VfRFVSQVRJT04gPSA1MDA7IFxuXG5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCk9PiB7XG4gICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KCd3b3JkJywgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgaWYoIWRhdGEud29yZCkge1xuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VhcmNoLnZhbHVlID0gZGF0YS53b3JkXG4gICAgICAgICAgICBzZWFyY2hXb3JkKGRhdGEud29yZClcbiAgICAgICAgfSk7IFxufSlcblxuXG5cbmZ1bmN0aW9uIGRlYm91bmNlKGNhbGxiYWNrLCB3YWl0LCBjb250ZXh0ID0gdGhpcykge1xuICBcbiAgICBsZXQgdGltZW91dCA9IG51bGw7XG4gICAgbGV0IGNhbGxiYWNrQXJncyA9IG51bGw7XG5cbiAgICBjb25zdCBsYXRlciA9ICgpID0+IGNhbGxiYWNrLmFwcGx5KGNvbnRleHQsIGNhbGxiYWNrQXJncyk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIGNhbGxiYWNrQXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICB0aW1lb3V0ID0gc2V0VGltZW91dChsYXRlciwgd2FpdCk7XG4gICAgfTtcbn1cblxuc2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKGUpPT4ge1xuICAgIFxuICAgIHZlcnNhdGlsZS5pbm5lckhUTUw9J+qygOyDieykkeyeheuLiOuLpC4nXG5cbiAgICBjb25zdCBkZWJvdW5jaW5nU2VhcmNoV29yZCA9IGRlYm91bmNlKCh3b3JkKSA9PiB7XG4gICAgICAgIHNlYXJjaFdvcmQod29yZCk7IFxuICAgICAgfSwgREVCT1VOQ0VfRFVSQVRJT04pXG5cbiAgICAgIGRlYm91bmNpbmdTZWFyY2hXb3JkKGUudGFyZ2V0LnZhbHVlKVxufSlcblxudmVyc2F0aWxlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyAsKGUpPT4ge1xuICAgIHNlYXJjaC52YWx1ZSA9IGUudGFyZ2V0LmlubmVyVGV4dFxuICAgIHNlYXJjaFdvcmQoc2VhcmNoLnZhbHVlKVxufSlcblxuXG5jb25zdCBOT19DT05URU5UX0VMRU1FTlQgPSBgXG4gICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+6rKA7IOJIOqysOqzvOqwgCDsl4bsirXri4jri6QuPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiaHR0cHM6Ly9tZW90aXRkYS5naXRodWIuaW8vRElDVElPTkFSWS1FRElUT1IvXCI+4oaSIOyDiOuhnOyatCDri6jslrQg7LaU6rCA7ZWY6riwPC9hPlxuICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL21lb3RpdGRhL0RJQ1RJT05BUllcIj7ihpIg64uo7Ja0IOy2lOqwgCDrqZTribTslrw8L2E+XG4gICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgYDtcbmZ1bmN0aW9uIHNlYXJjaFdvcmQod29yZCkge1xuICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlKFxuICAgICAgICB7aGFuZGxlcjogJ3RyYW5zbGF0ZScsIHdvcmR9LCBmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICBzd2l0Y2gocmVzcG9uc2UudHlwZSkge1xuICAgICAgICAgICAgY2FzZSAncmVjb21tYW5kJzpcbiAgICAgICAgICAgICAgICB2ZXJzYXRpbGUuaW5uZXJIVE1MPVwi7LaU7LKcIOqygOyDieyWtDxicj5cIlxuICAgICAgICAgICAgICAgcmVzcG9uc2UucmVjb21tYW5kcy5tYXAoKHJlY29tbWFuZCk9PiB7XG4gICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKVxuICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuaW5uZXJUZXh0ID0gcmVjb21tYW5kLnRpdGxlICsgXCIgXCJcbiAgICAgICAgICAgICAgICAgICB2ZXJzYXRpbGUuYXBwZW5kQ2hpbGQoZWxlbWVudClcbiAgICAgICAgICAgICAgICAgICBjYXJkX190ZXh0LmlubmVySFRNTCA9IE5PX0NPTlRFTlRfRUxFTUVOVFxuICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIGNhc2UgJ2ZpbmQnOlxuICAgICAgICAgICAgICAgIHZlcnNhdGlsZS5pbm5lckhUTUw9JydcbiAgICAgICAgICAgICAgICBjYXJkX190ZXh0LmlubmVySFRNTCA9IHJlc3BvbnNlLndvcmQuY29udGVudC5yZXBsYWNlQWxsKCc8YnIgLz4nLCAnPGJyIC8+PGJyIC8+JylcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB2ZXJzYXRpbGUuaW5uZXJIVE1MPScnXG4gICAgICAgICAgICAgICAgY2FyZF9fdGV4dC5pbm5lckhUTUwgPSBOT19DT05URU5UX0VMRU1FTlRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZVxuXG4gICAgfSlcbiAgICB2ZXJzYXRpbGUuaW5uZXJIVE1MPScnXG4gICAgY2FyZF9fdGV4dC5pbm5lckhUTUwgPSBOT19DT05URU5UX0VMRU1FTlRcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=