/******/ (() => { // webpackBootstrap
/*!******************!*
  !*** ./popup.js ***!
  \******************/
const search = document.getElementById('search');
const versatile = document.getElementById('versatile');
const card__text = document.getElementById('card__text');
const DEBOUNCE_DURATION = 500;
addEventListener('DOMContentLoaded', () => {
  chrome.storage.sync.get('word', function (data) {
    if (!data.word) {
      return;
    }

    search.value = data.word;
    searchWord(data.word);
  });
});

function debounce(callback, wait, context = this) {
  let timeout = null;
  let callbackArgs = null;

  const later = () => callback.apply(context, callbackArgs);

  return function () {
    callbackArgs = arguments;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
}

search.addEventListener('input', e => {
  versatile.innerHTML = '검색중입니다.';
  const debouncingSearchWord = debounce(word => {
    searchWord(word);
  }, DEBOUNCE_DURATION);
  debouncingSearchWord(e.target.value);
});
versatile.addEventListener('click', e => {
  search.value = e.target.innerText;
  searchWord(search.value);
});
const NO_CONTENT_ELEMENT = `
                   <div>
                    <span>검색 결과가 없습니다.</span>
                    <a target="_blank" href="https://meotitda.github.io/DICTIONARY-EDITOR/">→ 새로운 단어 추가하기</a>
                    <a target="_blank" href="https://github.com/meotitda/DICTIONARY">→ 단어 추가 메뉴얼</a>
                   </div>
                   `;

function searchWord(word) {
  chrome.runtime.sendMessage({
    handler: 'translate',
    word
  }, function (response) {
    switch (response.type) {
      case 'recommand':
        versatile.innerHTML = "<span style='color:red;'>추천 검색어</span><br>";
        response.recommands.map((recommand, index) => {
          const element = document.createElement('span');
          element.className = "recommanded_word";
          element.innerText = recommand.title + " ";
          versatile.appendChild(element);
          card__text.innerHTML = NO_CONTENT_ELEMENT;
          return;
        });
        break;

      case 'find':
        versatile.innerHTML = '';
        card__text.innerHTML = response.word.content.replaceAll('<br />', '<br /><br />');
        break;

      default:
        versatile.innerHTML = '';
        card__text.innerHTML = NO_CONTENT_ELEMENT;
    }

    return true;
  });
  versatile.innerHTML = '';
  card__text.innerHTML = NO_CONTENT_ELEMENT;
}
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZWxsb19leHRlbnNpb25zLy4vcG9wdXAuanMiXSwibmFtZXMiOlsic2VhcmNoIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInZlcnNhdGlsZSIsImNhcmRfX3RleHQiLCJERUJPVU5DRV9EVVJBVElPTiIsImFkZEV2ZW50TGlzdGVuZXIiLCJjaHJvbWUiLCJzdG9yYWdlIiwic3luYyIsImdldCIsImRhdGEiLCJ3b3JkIiwidmFsdWUiLCJzZWFyY2hXb3JkIiwiZGVib3VuY2UiLCJjYWxsYmFjayIsIndhaXQiLCJjb250ZXh0IiwidGltZW91dCIsImNhbGxiYWNrQXJncyIsImxhdGVyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZSIsImlubmVySFRNTCIsImRlYm91bmNpbmdTZWFyY2hXb3JkIiwidGFyZ2V0IiwiaW5uZXJUZXh0IiwiTk9fQ09OVEVOVF9FTEVNRU5UIiwicnVudGltZSIsInNlbmRNZXNzYWdlIiwiaGFuZGxlciIsInJlc3BvbnNlIiwidHlwZSIsInJlY29tbWFuZHMiLCJtYXAiLCJyZWNvbW1hbmQiLCJpbmRleCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwidGl0bGUiLCJhcHBlbmRDaGlsZCIsImNvbnRlbnQiLCJyZXBsYWNlQWxsIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsTUFBTSxHQUFHQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsUUFBeEIsQ0FBZjtBQUNBLE1BQU1DLFNBQVMsR0FBR0YsUUFBUSxDQUFDQyxjQUFULENBQXdCLFdBQXhCLENBQWxCO0FBQ0EsTUFBTUUsVUFBVSxHQUFHSCxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsWUFBeEIsQ0FBbkI7QUFDQSxNQUFNRyxpQkFBaUIsR0FBRyxHQUExQjtBQUVBQyxnQkFBZ0IsQ0FBQyxrQkFBRCxFQUFxQixNQUFLO0FBQ2xDQyxRQUFNLENBQUNDLE9BQVAsQ0FBZUMsSUFBZixD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QUF2QjtBQWxCUjs7QUFvQkEsV0FBTyxJQUFQO0FBRUgsR0F4QkQ7QUF5QkE1QixXQUFTLENBQUN3QixTQUFWLEdBQW9CLEVBQXBCO0FBQ0F2QixZQUFVLENBQUN1QixTQUFYLEdBQXVCSSxrQkFBdkI7QUFDSCxDIiwiZmlsZSI6InBvcHVwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2VhcmNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaCcpXG5jb25zdCB2ZXJzYXRpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmVyc2F0aWxlJylcbmNvbnN0IGNhcmRfX3RleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FyZF9fdGV4dCcpXG5jb25zdCBERUJPVU5DRV9EVVJBVElPTiA9IDUwMDsgXG5cbmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKT0+IHtcbiAgICAgICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoJ3dvcmQnLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBpZighZGF0YS53b3JkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWFyY2gudmFsdWUgPSBkYXRhLndvcmRcbiAgICAgICAgICAgIHNlYXJjaFdvcmQoZGF0YS53b3JkKVxuICAgICAgICB9KTsgXG59KVxuXG5cblxuZnVuY3Rpb24gZGVib3VuY2UoY2FsbGJhY2ssIHdhaXQsIGNvbnRleHQgPSB0aGlzKSB7XG4gIFxuICAgIGxldCB0aW1lb3V0ID0gbnVsbDtcbiAgICBsZXQgY2FsbGJhY2tBcmdzID0gbnVsbDtcblxuICAgIGNvbnN0IGxhdGVyID0gKCkgPT4gY2FsbGJhY2suYXBwbHkoY29udGV4dCwgY2FsbGJhY2tBcmdzKTtcblxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgY2FsbGJhY2tBcmdzID0gYXJndW1lbnRzO1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KGxhdGVyLCB3YWl0KTtcbiAgICB9O1xufVxuXG5zZWFyY2guYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoZSk9PiB7XG4gICAgXG4gICAgdmVyc2F0aWxlLmlubmVySFRNTD0n6rKA7IOJ7KSR7J6F64uI64ukLidcblxuICAgIGNvbnN0IGRlYm91bmNpbmdTZWFyY2hXb3JkID0gZGVib3VuY2UoKHdvcmQpID0+IHtcbiAgICAgICAgc2VhcmNoV29yZCh3b3JkKTsgXG4gICAgICB9LCBERUJPVU5DRV9EVVJBVElPTilcblxuICAgICAgZGVib3VuY2luZ1NlYXJjaFdvcmQoZS50YXJnZXQudmFsdWUpXG59KVxuXG52ZXJzYXRpbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snICwoZSk9PiB7XG4gICAgc2VhcmNoLnZhbHVlID0gZS50YXJnZXQuaW5uZXJUZXh0XG4gICAgc2VhcmNoV29yZChzZWFyY2gudmFsdWUpXG59KVxuXG5cbmNvbnN0IE5PX0NPTlRFTlRfRUxFTUVOVCA9IGBcbiAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj7qsoDsg4kg6rKw6rO86rCAIOyXhuyKteuLiOuLpC48L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCJodHRwczovL21lb3RpdGRhLmdpdGh1Yi5pby9ESUNUSU9OQVJZLUVESVRPUi9cIj7ihpIg7IOI66Gc7Jq0IOuLqOyWtCDstpTqsIDtlZjquLA8L2E+XG4gICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vbWVvdGl0ZGEvRElDVElPTkFSWVwiPuKGkiDri6jslrQg7LaU6rCAIOuplOuJtOyWvDwvYT5cbiAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICBgO1xuXG5mdW5jdGlvbiBzZWFyY2hXb3JkKHdvcmQpIHtcbiAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShcbiAgICAgICAge2hhbmRsZXI6ICd0cmFuc2xhdGUnLCB3b3JkfSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgc3dpdGNoKHJlc3BvbnNlLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3JlY29tbWFuZCc6XG4gICAgICAgICAgICAgICAgdmVyc2F0aWxlLmlubmVySFRNTD1cIjxzcGFuIHN0eWxlPSdjb2xvcjpyZWQ7Jz7stpTsspwg6rKA7IOJ7Ja0PC9zcGFuPjxicj5cIlxuICAgICAgICAgICAgICAgcmVzcG9uc2UucmVjb21tYW5kcy5tYXAoKHJlY29tbWFuZCwgaW5kZXgpPT4ge1xuICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcbiAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsYXNzTmFtZSA9IFwicmVjb21tYW5kZWRfd29yZFwiXG4gICAgICAgICAgICAgICAgICAgZWxlbWVudC5pbm5lclRleHQgPSByZWNvbW1hbmQudGl0bGUgKyBcIiBcIlxuICAgICAgICAgICAgICAgICAgIHZlcnNhdGlsZS5hcHBlbmRDaGlsZChlbGVtZW50KVxuICAgICAgICAgICAgICAgICAgIGNhcmRfX3RleHQuaW5uZXJIVE1MID0gTk9fQ09OVEVOVF9FTEVNRU5UXG4gICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgY2FzZSAnZmluZCc6XG4gICAgICAgICAgICAgICAgdmVyc2F0aWxlLmlubmVySFRNTD0nJ1xuICAgICAgICAgICAgICAgIGNhcmRfX3RleHQuaW5uZXJIVE1MID0gcmVzcG9uc2Uud29yZC5jb250ZW50LnJlcGxhY2VBbGwoJzxiciAvPicsICc8YnIgLz48YnIgLz4nKVxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHZlcnNhdGlsZS5pbm5lckhUTUw9JydcbiAgICAgICAgICAgICAgICBjYXJkX190ZXh0LmlubmVySFRNTCA9IE5PX0NPTlRFTlRfRUxFTUVOVFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlXG5cbiAgICB9KVxuICAgIHZlcnNhdGlsZS5pbm5lckhUTUw9JydcbiAgICBjYXJkX190ZXh0LmlubmVySFRNTCA9IE5PX0NPTlRFTlRfRUxFTUVOVFxufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9